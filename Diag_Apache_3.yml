# Apache: 링크 사용 금지
---
- name: Check for symbolic links and alias restrictions in Apache
  hosts: aws_web
  become: yes
  vars:
    apache_config_path: '/etc/httpd/conf/httpd.conf'  # Apache 설정 파일 경로
    alias_config_path: '/etc/httpd/conf/httpd.conf'  # Alias 설정 파일 경로
    diag_file_path: '/home/ec2-user/Diag_File.txt'  # 진단 결과 파일 경로
    diagnostic_number: 3  # 진단 항목 번호

  tasks:
    - name: Check if FollowSymLinks is enabled
      command: "grep FollowSymLinks {{ apache_config_path }}"
      register: follow_symlinks_check
      ignore_errors: yes

    - name: Check for aliases in Apache configuration
      command: "grep '^Alias' {{ alias_config_path }}"
      register: alias_check
      ignore_errors: yes

    - name: Determine FollowSymLinks status
      set_fact:
        symlink_result: "S"
      when: follow_symlinks_check.stdout is not search('Indexes')

    - name: Update symlink_result if vulnerabilities exist
      set_fact:
        symlink_result: "V"
      when: follow_symlinks_check.stdout is search('Indexes')

    - name: Determine alias status
      set_fact:
        alias_result: "S"
      when: alias_check.stdout | length == 0

    - name: Update alias_result if vulnerabilities exist
      set_fact:
        alias_result: "V"
      when: alias_check.stdout | length > 0

    - name: Determine overall diagnostic result
      set_fact:
        diag_result: "S" 
      when: symlink_result == "S" and alias_result == "S"

    - name: Update overall diagnostic result if vulnerabilities exist
      set_fact:
        diag_result: "V"
      when: symlink_result == "V" or alias_result == "V"

    - name: Write diagnostic result to file
      lineinfile:
        path: "{{ diag_file_path }}"
        line: "{{ diagnostic_number }}, 링크 사용 금지, {{ diag_result }}"
        create: yes
