# Mysql: "불필요한 계정 제거"
- name: Filter User
  set_fact:
    users_1: "{{ query_result_1.query_result[0] | map(attribute='user') | list }}"

- name: Check unregi users
  set_fact:
    unregi_users_1: "{{ users_1 | difference(regi_users_1) }}"

- name: Set Status
  set_fact:
    status_1: "{{ 'V' if (unregi_users_1 | length > 0) else 'S' }}"


# Mysql: "취약한 패스워드 사용 제한"
- name: Filter policy
  set_fact:
    policy_2: "{{ (query_result_2.query_result[0] | selectattr('Variable_name', 'equalto', 'validate_password.policy') | first).Value }}"

- name: Set Status
  set_fact:
    status_2: "{{ 'V' if policy_2 == 'LOW' else 'S' }}"


# Mysql: "타 사용자에 권한 부여 옵션 제한"
- name: Filter 'Y' User
  set_fact:
    priv_users_3: "{{ query_result_3.query_result[0] | selectattr('Grant_priv', 'equalto', 'Y') | map(attribute='user') | list }}"

- name: Check unregi users
  set_fact:
    unregi_users_3: "{{ priv_users_3 | difference(regi_users_3) }}"

- name: Set Status
  set_fact:
    status_3: "{{ 'V' if (unregi_users_3 | length > 0) else 'S' }}"


# Mysql: "사용자 계정 정보 테이블 접근 권한"
- name: Filter 'Y' User
  set_fact:
    priv_users_4: "{{ query_result_4.query_result[0] | selectattr('select_priv', 'equalto', 'Y') | map(attribute='user') | list }}"

- name: Check unregi users
  set_fact:
    unregi_users_4: "{{ priv_users_4 | difference(regi_users_4) }}"

- name: Set Status
  set_fact:
    status_4: "{{ 'V' if (unregi_users_4 | length > 0) else 'S' }}"


# Mysql: "root 권한으로 서버 구동 제한"
- name: Get mysqld process
  shell: "{{ get_path_5 }}"
  register: mysqld_process_5
  changed_when: false

- name: Extract user running mysqld
  set_fact:
    mysqld_user_5: "{{ mysqld_process_5.stdout_lines[0].split()[0] }}"

- name: Set Status
  set_fact:
    status_5: "{{ 'V' if mysqld_user_5 == 'root' else 'S' }}"


# Mysql: "환경설정 파일 접근 권한"
- name: Get perm
  shell: "{{ get_path_6 }}"
  register: perm
  changed_when: false

- name: Parsing perm
  set_fact:
    file_perm_6: "{{ perm.stdout_lines[0].split()[0] }}"

- name: Convert file_perm
  set_fact:
    num_perm_6: >-
        {{
          (((4 * (file_perm_6[1] == 'r') | int) +
            (2 * (file_perm_6[2] == 'w') | int) +
            (1 * (file_perm_6[3] == 'x') | int)) * 64) +
          (((4 * (file_perm_6[4] == 'r') | int) +
            (2 * (file_perm_6[5] == 'w') | int) +
            (1 * (file_perm_6[6] == 'x') | int)) * 8) +
          ((4 * (file_perm_6[7] == 'r') | int) +
            (2 * (file_perm_6[8] == 'w') | int) +
            (1 * (file_perm_6[9] == 'x') | int))
        }}

- name: octal_perm_6
  set_fact:
    octal_perm_6: "{{ '%o' | format(num_perm_6 | int) }}"

- name: Set Status
  set_fact:
    status_6: "{{ 'V' if octal_perm_6 | int > 640 else 'S' }}"


# Mysql: "안전한 암호화 알고리즘 사용"
- name: Filter plugin
  set_fact:
    user_pass_algo_7: "{{ query_result_7.query_result[0] | map(attribute='plugin') | list }}"

- name: Check unsafe_algo
  set_fact:
    unsafe_algo_7: "{{ user_pass_algo_7 | difference(regi_pass_algo_7) }}"

- name: Set Status
  set_fact:
    status_7: "{{ 'V' if (unsafe_algo_7 | length > 0) else 'S' }}"


# Mysql: "로그 활성화"
- name: Filter general log value
  set_fact:
    general_log_value_8: "{{ query_result_8_1.query_result[0] | selectattr('Variable_name', 'equalto', 'general_log') | map(attribute='Value') | first }}"

- name: Filter slow query log value
  set_fact:
    slow_log_value_8: "{{ query_result_8_2.query_result[0] | selectattr('Variable_name', 'equalto', 'slow_query_log') | map(attribute='Value') | first }}"

- name: Set Status
  set_fact:
    status_8: "{{ 'V' if (slow_log_value_8 != 'ON') else 'S' }}"


# Mysql: "최신 보안 패치 적용"
- name: Parse Mysql version
  set_fact:
    mysql_version_9: "{{ query_result_9.query_result[0][0]['@@version'] }}"

- name: Get installed mysql-server package version
  shell: "{{ get_path_9 }}"
  register: rpm_version_output_9
  changed_when: false

- name: Parse RPM version
  set_fact:
    rpm_version_9: "{{ rpm_version_output_9.stdout_lines[0] | regex_search('([0-9]+\\.[0-9]+\\.[0-9]+)') }}"

- name: Set Status
  set_fact:
    status_9: "{{ 'V' if (mysql_version_9 is version(rpm_version_9, '<')) else 'S' }}" 

- name: Gather status
  set_fact:
    Mysql_status:
      status1: "{{ status_1 }}"
      status2: "{{ status_2 }}"
      status3: "{{ status_3 }}"
      status4: "{{ status_4 }}"
      status5: "{{ status_5 }}"
      status6: "{{ status_6 }}"
      status7: "{{ status_7 }}"
      status8: "{{ status_8 }}"
      status9: "{{ status_9 }}"
